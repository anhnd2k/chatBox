{"ast":null,"code":"var _jsxFileName = \"/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/base/PopUpCreateIntent.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./popUp.css\";\nimport useOutsideAlerter from \"../hook/useOutsideAlerter\";\nimport { useCallback, useEffect, useMemo, useState } from \"react/cjs/react.development\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PopUpCreateIntent(props) {\n  _s();\n\n  const popupRef = React.useRef(null);\n  useOutsideAlerter(popupRef, props.onClickOutside);\n  const [dataInput, setDataInput] = useState(\"\");\n  useEffect(() => {\n    if (props.show) {\n      console.log('load intent');\n      axios.get(window.location.hostname + ':5000' + '/intent').then(({\n        data\n      }) => {\n        const i = data.map(item => ({\n          name: item.intent\n        })).flat();\n        setIntents(i);\n      }).catch(console.log);\n    } else {\n      setDataInput('');\n    }\n  }, [props.show]);\n  const [intents, setIntents] = useState([]);\n  const displayIntents = useMemo(() => {\n    return intents.filter(i => i.name.trim().toLowerCase().includes(dataInput.trim().toLowerCase()));\n  }, [dataInput, intents]);\n  const createNewIntent = useCallback(() => {\n    if (dataInput) {\n      axios.post(window.location.hostname + ':5000' + '/intent', {\n        name: dataInput,\n        example: ''\n      }).then(({\n        data\n      }) => {\n        const i = data.map(item => ({\n          name: item.intent\n        })).flat();\n        setIntents(i);\n        props.onSelect(dataInput);\n        props.onClickOutside();\n      }).catch(console.log).finally(() => setDataInput(''));\n    } else {\n      alert('Ý định không được rỗng');\n    }\n  }, [dataInput, props]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: props.width,\n      minHeight: props.height ? props.height : \"250px\",\n      top: props.top ? props.top : \"\",\n      left: props.left ? props.left : \"\",\n      right: props.right ? props.right : \"\",\n      bottom: props.bottom ? props.bottom : \"\"\n    },\n    className: \"pop_up_input\",\n    ref: popupRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create_entity\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input_create\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            width: \"100%\",\n            fontSize: 15,\n            paddingLeft: 10,\n            border: \"none\",\n            boxShadow: \"none\",\n            borderWidth: 0,\n            outlineWidth: 0\n          },\n          value: dataInput,\n          onChange: e => {\n            setDataInput(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          cursor: \"pointer\"\n        },\n        onClick: createNewIntent,\n        className: \"btn_create\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"#fff\"\n          },\n          children: props.btnText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: props.heightSuggestions ? props.heightSuggestions : \"250px\"\n      },\n      className: \"suggestions\",\n      children: displayIntents && displayIntents.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestions_item\",\n          onClick: () => {\n            props.onSelect(item.name);\n            props.onClickOutside();\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text1_suggestions_item\",\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)\n        }, item.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PopUpCreateIntent, \"Jhq/c4T1YDfMPPFD6X4Z2b0ZcMo=\", false, function () {\n  return [useOutsideAlerter];\n});\n\n_c = PopUpCreateIntent;\nexport default PopUpCreateIntent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopUpCreateIntent\");","map":{"version":3,"sources":["/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/base/PopUpCreateIntent.js"],"names":["React","useOutsideAlerter","useCallback","useEffect","useMemo","useState","axios","PopUpCreateIntent","props","popupRef","useRef","onClickOutside","dataInput","setDataInput","show","console","log","get","window","location","hostname","then","data","i","map","item","name","intent","flat","setIntents","catch","intents","displayIntents","filter","trim","toLowerCase","includes","createNewIntent","post","example","onSelect","finally","alert","width","minHeight","height","top","left","right","bottom","fontSize","paddingLeft","border","boxShadow","borderWidth","outlineWidth","e","target","value","cursor","color","btnText","heightSuggestions"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./popUp.css\";\nimport useOutsideAlerter from \"../hook/useOutsideAlerter\";\nimport { useCallback, useEffect, useMemo, useState } from \"react/cjs/react.development\";\nimport axios from \"axios\";\n\nfunction PopUpCreateIntent(props) {\n  const popupRef = React.useRef(null);\n  useOutsideAlerter(popupRef, props.onClickOutside);\n  const [dataInput, setDataInput] = useState(\"\");\n\n  useEffect(() => {\n    if (props.show) {\n      console.log('load intent')\n      axios.get(window.location.hostname + ':5000' + '/intent')\n          .then(({\n              data\n          }) => {\n              const i = data.map((item) => ({name: item.intent})).flat()\n              setIntents(i)\n          })\n          .catch(console.log)\n    } else {\n      setDataInput('')\n    }\n  }, [props.show])\n  const [intents, setIntents] = useState([]);\n  const displayIntents = useMemo(() => {\n    return intents.filter(i => i.name.trim().toLowerCase().includes(dataInput.trim().toLowerCase()))\n  }, [dataInput, intents])\n\n  const createNewIntent = useCallback(() => {\n    if (dataInput) {\n      axios.post(window.location.hostname + ':5000' + '/intent', {name: dataInput, example: ''})\n            .then(({\n                data\n            }) => {\n                const i = data.map((item) => ({name: item.intent})).flat()\n                setIntents(i)\n                props.onSelect(dataInput)\n                props.onClickOutside()\n            })\n            .catch(console.log)\n            .finally(() => setDataInput(''))\n    } else {\n      alert('Ý định không được rỗng')\n    }\n  }, [dataInput, props])\n\n  return (\n    <div\n      style={{\n        width: props.width,\n        minHeight: props.height ? props.height : \"250px\",\n        top: props.top ? props.top : \"\",\n        left: props.left ? props.left : \"\",\n        right: props.right ? props.right : \"\",\n        bottom: props.bottom ? props.bottom : \"\",\n      }}\n      className=\"pop_up_input\"\n      ref={popupRef}\n    >\n      <div className=\"create_entity\">\n        <div className=\"input_create\">\n          <input\n            style={{\n              width: \"100%\",\n              fontSize: 15,\n              paddingLeft: 10,\n              border: \"none\",\n              boxShadow: \"none\",\n              borderWidth: 0,\n              outlineWidth: 0,\n            }}\n            value={dataInput}\n            onChange={e => {\n              setDataInput(e.target.value)\n            }}\n          />\n        </div>\n        <div\n          style={{ cursor: \"pointer\" }}\n          onClick={createNewIntent}\n          className=\"btn_create\"\n        >\n          <div style={{ color: \"#fff\" }}>{props.btnText}</div>\n        </div>\n      </div>\n      <div\n        style={{\n          height: props.heightSuggestions ? props.heightSuggestions : \"250px\",\n        }}\n        className=\"suggestions\"\n      >\n        {displayIntents &&\n          displayIntents.map((item) => {\n            return (\n              <div key={item.name} className=\"suggestions_item\" onClick={() => {\n                  props.onSelect(item.name)\n                  props.onClickOutside()\n                }}>\n                <div className=\"text1_suggestions_item\">{item.name}</div>\n              </div>\n            );\n          })}\n        {/* item\n        <div className=\"suggestions_item\">\n          <div className=\"text1_suggestions_item\">sdafasdfasd</div>\n          <div className=\"text2_suggestions_item\">\n            dfsadfsdakfjsadkfjsdakjjaksd\n          </div>\n        </div>\n        {/* item */}\n      </div>\n    </div>\n  );\n}\n\nexport default PopUpCreateIntent;\n"]},"metadata":{},"sourceType":"module"}