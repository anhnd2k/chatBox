{"ast":null,"code":"var _jsxFileName = \"/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/container/ChatView.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react/cjs/react.development\";\nimport \"../base/chatview.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChatView({\n  location\n}) {\n  _s();\n\n  const [user, setUser] = useState('');\n  useEffect(() => {\n    if (location.pathname === '/Chatview') {\n      setUser('user_' + new Date().getTime());\n    }\n  }, [location]);\n  const [messages, setMessages] = useState([]);\n  const [messageInput, setMessageInput] = useState('');\n\n  const reset = () => {\n    setMessages([]);\n    setUser('user_' + new Date().getTime());\n    setMessageInput('');\n  };\n\n  const sendMessage = async () => {\n    try {\n      setMessageInput('');\n      setMessages(prev => prev.concat({\n        type: 'user',\n        message: messageInput\n      }));\n      const {\n        data\n      } = await axios.post(window.location.hostname + ':5000' + '/chat', {\n        sender: user,\n        message: messageInput\n      });\n\n      if (data.length > 0) {\n        setMessages(prev => prev.concat({\n          type: 'bot',\n          message: data[0].text\n        }));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-tab\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-chat\",\n      children: [messages.map(m => m.type === 'bot' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"boss-chat\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: m.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-chat\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: m.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-send\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Input your message\",\n          onKeyDown: e => (e.keyCode ? e.keyCode : e.which) === 13 && sendMessage(),\n          value: messageInput,\n          onChange: e => setMessageInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"resetbtn\",\n          onClick: reset,\n          children: \"Xo\\xE1 h\\u1ED9i tho\\u1EA1i\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"sendbtn\",\n          onClick: sendMessage,\n          children: \"G\\u1EEDi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChatView, \"5tpasfbfcwEeXBdzfX6Lq8vmPSQ=\");\n\n_c = ChatView;\nexport default ChatView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatView\");","map":{"version":3,"sources":["/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/container/ChatView.jsx"],"names":["axios","React","useEffect","useState","ChatView","location","user","setUser","pathname","Date","getTime","messages","setMessages","messageInput","setMessageInput","reset","sendMessage","prev","concat","type","message","data","post","window","hostname","sender","length","text","e","console","log","map","m","keyCode","which","target","value"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react/cjs/react.development\";\nimport \"../base/chatview.css\";\n\nfunction ChatView({location}) {\n  const [user, setUser] = useState('')\n  useEffect(() => {\n      if (location.pathname === '/Chatview') {\n        setUser('user_' + new Date().getTime())\n      }\n  }, [location])\n  const [messages, setMessages] = useState([])\n  const [messageInput, setMessageInput] = useState('')\n\n  const reset = () => {\n    setMessages([])\n    setUser('user_' + new Date().getTime())\n    setMessageInput('')\n  }\n\n  const sendMessage = async () => {\n    try {\n      setMessageInput('')\n      setMessages(prev => prev.concat({type: 'user', message: messageInput}))\n      const {data} = await axios.post(window.location.hostname + ':5000' + '/chat', {sender: user, message: messageInput}) \n      if (data.length > 0) {\n        setMessages(prev => prev.concat({type: 'bot', message: data[0].text}))\n      }\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  return (\n    <div className=\"chat-tab\">\n      <div className=\"box-chat\">\n        {messages.map(m => (\n          m.type === 'bot'\n          ? <div className=\"boss-chat\">\n              <h5>{m.message}</h5>\n            </div>\n          : <div className=\"user-chat\">\n              <h5>{m.message}</h5>\n            </div>\n        ))}\n        <div className=\"chat-send\">\n          <input placeholder=\"Input your message\"\n            onKeyDown={e => (e.keyCode ? e.keyCode : e.which) === 13 && sendMessage()}\n            value={messageInput}\n            onChange={e => setMessageInput(e.target.value)} />\n          <h3 className=\"resetbtn\" onClick={reset}>\n            Xoá hội thoại\n          </h3>\n          <h3 className=\"sendbtn\" onClick={sendMessage}>Gửi</h3>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatView;\n"]},"metadata":{},"sourceType":"module"}