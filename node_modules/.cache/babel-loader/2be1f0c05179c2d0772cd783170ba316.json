{"ast":null,"code":"var _jsxFileName = \"/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/base/PopUpCreateEntity.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./popUp.css\";\nimport useOutsideAlerter from \"../hook/useOutsideAlerter\";\nimport { useCallback, useEffect, useMemo, useState } from \"react/cjs/react.development\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PopUpCreateEntity(props) {\n  _s();\n\n  const {\n    textInputEntity\n  } = props;\n  const popupRef = React.useRef(null);\n  useOutsideAlerter(popupRef, props.onClickOutside);\n  const [dataInput, setDataInput] = useState(textInputEntity || \"\");\n  useEffect(() => {\n    if (props.show) {\n      axios.get(window.location.hostname + ':5000' + '/entity').then(({\n        data\n      }) => {\n        setEntities(data);\n      }).catch(console.log);\n    } else {\n      setDataInput('');\n    }\n  }, [props.show]);\n  const [entities, setEntities] = useState([]);\n  const displayEntities = useMemo(() => {\n    return entities.filter(e => e.trim().toLowerCase().includes(dataInput.trim().toLowerCase()));\n  }, [dataInput, entities]);\n  const createNewEntity = useCallback(() => {\n    if (dataInput) {\n      axios.post(window.location.hostname + ':5000' + '/entity', {\n        name: dataInput\n      }).then(({\n        data\n      }) => {\n        setEntities(data);\n        props.onSelect(dataInput);\n        props.onClickOutside();\n      }).catch(console.log).finally(() => setDataInput(''));\n    } else {\n      alert('Thực thể không được rỗng');\n    }\n  }, [dataInput, props]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: props.width,\n      minHeight: props.height ? props.height : \"250px\",\n      top: props.top ? props.top : \"\",\n      left: props.left ? props.left : \"\",\n      right: props.right ? props.right : \"\",\n      bottom: props.bottom ? props.bottom : \"\"\n    },\n    className: \"pop_up_input\",\n    ref: popupRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create_entity\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input_create\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            width: \"100%\",\n            fontSize: 15,\n            paddingLeft: 10,\n            border: \"none\",\n            boxShadow: \"none\",\n            borderWidth: 0,\n            outlineWidth: 0\n          },\n          placeholder: `Thực thể cho \"${props.placeholderInput}\"`,\n          value: dataInput,\n          onChange: e => {\n            setDataInput(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          cursor: \"pointer\"\n        },\n        className: \"btn_create\",\n        onClick: createNewEntity,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"#fff\"\n          },\n          children: props.btnText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: props.heightSuggestions ? props.heightSuggestions : \"250px\"\n      },\n      className: \"suggestions\",\n      children: displayEntities && displayEntities.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestions_item\",\n          onClick: () => {\n            props.onSelect(item);\n            props.onClickOutside();\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text1_suggestions_item\",\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PopUpCreateEntity, \"MePNi0ruvxDO/gdKYG/UFa+RvxY=\", false, function () {\n  return [useOutsideAlerter];\n});\n\n_c = PopUpCreateEntity;\nexport default PopUpCreateEntity;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopUpCreateEntity\");","map":{"version":3,"sources":["/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/base/PopUpCreateEntity.js"],"names":["React","useOutsideAlerter","useCallback","useEffect","useMemo","useState","axios","PopUpCreateEntity","props","textInputEntity","popupRef","useRef","onClickOutside","dataInput","setDataInput","show","get","window","location","hostname","then","data","setEntities","catch","console","log","entities","displayEntities","filter","e","trim","toLowerCase","includes","createNewEntity","post","name","onSelect","finally","alert","width","minHeight","height","top","left","right","bottom","fontSize","paddingLeft","border","boxShadow","borderWidth","outlineWidth","placeholderInput","target","value","cursor","color","btnText","heightSuggestions","map","item"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./popUp.css\";\nimport useOutsideAlerter from \"../hook/useOutsideAlerter\";\nimport { useCallback, useEffect, useMemo, useState } from \"react/cjs/react.development\";\nimport axios from \"axios\";\n\nfunction PopUpCreateEntity(props) {\n  const {textInputEntity} = props;\n  const popupRef = React.useRef(null);\n  useOutsideAlerter(popupRef, props.onClickOutside);\n  const [dataInput, setDataInput] = useState(textInputEntity || \"\");\n\n  useEffect(() => {\n    if (props.show) {\n      axios.get(window.location.hostname + ':5000' + '/entity')\n          .then(({\n              data\n          }) => {\n              setEntities(data)\n          })\n          .catch(console.log)\n    } else {\n      setDataInput('')\n    }\n  }, [props.show])\n  const [entities, setEntities] = useState([]);\n  const displayEntities = useMemo(() => {\n    return entities.filter(e => e.trim().toLowerCase().includes(dataInput.trim().toLowerCase()))\n  }, [dataInput, entities])\n\n  const createNewEntity = useCallback(() => {\n    if (dataInput) {\n      axios.post(window.location.hostname + ':5000' + '/entity', {name: dataInput})\n            .then(({\n                data\n            }) => {\n                setEntities(data)\n                props.onSelect(dataInput)\n                props.onClickOutside()\n            })\n            .catch(console.log)\n            .finally(() => setDataInput(''))\n    } else {\n      alert('Thực thể không được rỗng')\n    }\n  }, [dataInput, props])\n\n  return (\n    <div\n      style={{\n        width: props.width,\n        minHeight: props.height ? props.height : \"250px\",\n        top: props.top ? props.top : \"\",\n        left: props.left ? props.left : \"\",\n        right: props.right ? props.right : \"\",\n        bottom: props.bottom ? props.bottom : \"\",\n      }}\n      className=\"pop_up_input\"\n      ref={popupRef}\n    >\n      <div className=\"create_entity\">\n        <div className=\"input_create\">\n          <input\n            style={{\n              width: \"100%\",\n              fontSize: 15,\n              paddingLeft: 10,\n              border: \"none\",\n              boxShadow: \"none\",\n              borderWidth: 0,\n              outlineWidth: 0,\n            }}\n            placeholder={`Thực thể cho \"${props.placeholderInput}\"`}\n            value={dataInput}\n            onChange={(e) => {\n              setDataInput(e.target.value)\n            }}\n          />\n        </div>\n        <div\n          style={{ cursor: \"pointer\" }}\n          className=\"btn_create\"\n          onClick={createNewEntity}\n        >\n          <div style={{ color: \"#fff\" }}>{props.btnText}</div>\n        </div>\n      </div>\n      <div\n        style={{\n          height: props.heightSuggestions ? props.heightSuggestions : \"250px\",\n        }}\n        className=\"suggestions\"\n      >\n        {displayEntities &&\n          displayEntities.map((item) => {\n            return (\n              <div key={item} className=\"suggestions_item\" onClick={() => {\n                props.onSelect(item)\n                props.onClickOutside()\n              }}>\n                <div className=\"text1_suggestions_item\">{item}</div>\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n}\n\nexport default PopUpCreateEntity;\n"]},"metadata":{},"sourceType":"module"}