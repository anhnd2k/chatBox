{"ast":null,"code":"var _jsxFileName = \"/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/container/Intents.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport '../App.css';\nimport '../access/css/style.css';\nimport { useCallback, useEffect, useState } from 'react/cjs/react.development';\nimport axios from 'axios';\nimport search from '../access/img/icon_search.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Intents({\n  location,\n  history\n}) {\n  _s();\n\n  // useEffect(() => {\n  //     if (location.pathname === '/intents') {\n  //         console.log('load data', location)\n  //         axios.get(window.location.hostname + ':5000' + '/intent')\n  //             .then(({\n  //                 data\n  //             }) => {\n  //                 setIntents(prev => {\n  //                     return data.map((item, parentIdx) => {\n  //                         return item.examples.split('\\n').filter(i => i).map((text, childIdx) => ({\n  //                             text: text.substr(2),\n  //                             intent: item.intent,\n  //                             parent: parentIdx,\n  //                             child: childIdx\n  //                         }))\n  //                     }).flat()\n  //                 })\n  //             })\n  //             .catch(console.log)\n  //     }\n  // }, [location])\n  const [intents, setIntents] = useState([]);\n  const deleteIntent = useCallback((parent, child) => {\n    const examples = intents.filter(i => i.parent === parent && i.child !== child).reduce((ex, i) => ex + `- ${i.text}\\n`, '');\n\n    if (examples) {\n      axios.put(window.location.hostname + ':5000' + '/intent/' + parent, {\n        examples\n      }).then(({\n        data\n      }) => setIntents(data.map((item, parentIdx) => {\n        return item.examples.split('\\n').filter(t => t).map((text, childIdx) => ({\n          text: text.substr(2),\n          intent: item.intent,\n          path: `${parentIdx}.${childIdx}`\n        }));\n      }).flat()));\n    } else {\n      axios.delete(window.location.hostname + ':5000' + '/intent/' + parent).then(({\n        data\n      }) => setIntents(data.map((item, parentIdx) => {\n        return item.examples.split('\\n').filter(t => t).map((text, childIdx) => ({\n          text: text.substr(2),\n          intent: item.intent,\n          path: `${parentIdx}.${childIdx}`\n        }));\n      }).flat()));\n    }\n  }, [intents]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table_conten\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header_tab\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text_01\",\n        children: \"\\xDD \\u0111\\u1ECBnh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"__search_input\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"search\",\n        style: {\n          width: 15,\n          height: 15,\n          marginLeft: 10,\n          marginRight: 10\n        },\n        src: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          outlineWidth: 0,\n          width: \"100%\",\n          border: 0,\n          height: \"100%\",\n          fontSize: 16\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"__table\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"host\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"\\xDD \\u0111\\u1ECBnh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"N\\u1ED9i dung\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), intents.map(i => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"tr_hover\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"col_name\",\n            children: i.intent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"clo_entitis\",\n            children: i.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"select_dot\",\n            onClick: () => deleteIntent(i.parent, i.child),\n            children: \"Xo\\xE1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this)]\n        }, i.text + i.intent, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Intents, \"indLhKzCs8CkKvciWR+oQVwf+es=\");\n\n_c = Intents;\nexport default Intents;\n\nvar _c;\n\n$RefreshReg$(_c, \"Intents\");","map":{"version":3,"sources":["/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/container/Intents.jsx"],"names":["React","useCallback","useEffect","useState","axios","search","Intents","location","history","intents","setIntents","deleteIntent","parent","child","examples","filter","i","reduce","ex","text","put","window","hostname","then","data","map","item","parentIdx","split","t","childIdx","substr","intent","path","flat","delete","width","height","marginLeft","marginRight","outlineWidth","border","fontSize"],"mappings":"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","sourcesContent":["import React from 'react'\nimport '../App.css';\nimport '../access/css/style.css'\nimport { useCallback, useEffect, useState } from 'react/cjs/react.development';\nimport axios from 'axios';\nimport search from '../access/img/icon_search.png';\n\nfunction Intents({location, history}) {\n    // useEffect(() => {\n    //     if (location.pathname === '/intents') {\n    //         console.log('load data', location)\n    //         axios.get(window.location.hostname + ':5000' + '/intent')\n    //             .then(({\n    //                 data\n    //             }) => {\n    //                 setIntents(prev => {\n    //                     return data.map((item, parentIdx) => {\n    //                         return item.examples.split('\\n').filter(i => i).map((text, childIdx) => ({\n    //                             text: text.substr(2),\n    //                             intent: item.intent,\n    //                             parent: parentIdx,\n    //                             child: childIdx\n    //                         }))\n    //                     }).flat()\n    //                 })\n    //             })\n    //             .catch(console.log)\n    //     }\n    // }, [location])\n    const [intents, setIntents] = useState([])\n\n    const deleteIntent = useCallback((parent, child) => {\n        const examples = intents.filter(i => i.parent === parent && i.child !== child).reduce((ex, i) => ex + `- ${i.text}\\n`, '')\n        if (examples) {\n            axios.put(window.location.hostname + ':5000' + '/intent/' + parent, {examples}).then(({data}) => setIntents(data.map((item, parentIdx) => {\n                                return item.examples.split('\\n').filter(t => t).map((text, childIdx) => ({\n                                    text: text.substr(2),\n                                    intent: item.intent,\n                                    path: `${parentIdx}.${childIdx}`\n                                }))\n                            }).flat()))\n        } else {\n            axios.delete(window.location.hostname + ':5000' + '/intent/' + parent).then(({data}) => setIntents(data.map((item, parentIdx) => {\n                                return item.examples.split('\\n').filter(t => t).map((text, childIdx) => ({\n                                    text: text.substr(2),\n                                    intent: item.intent,\n                                    path: `${parentIdx}.${childIdx}`\n                                }))\n                            }).flat()))\n        }\n    }, [intents])\n    return (\n         <div className=\"table_conten\">\n            <div className=\"header_tab\">\n                <div className=\"text_01\">Ý định</div>\n                {/* <div className=\"btn\">\n                    <div style={{ color: \"#fff\", fontWeight:\"bold\" }}>Train</div>\n                </div> */}\n            </div>\n            <div className=\"__search_input\">\n                <img alt={\"search\"} style={{ width: 15, height: 15, marginLeft:10, marginRight:10}} src={search}/>\n                <input\n                    style={{outlineWidth: 0,width:\"100%\", border:0, height:\"100%\", fontSize: 16}}\n                />\n            </div>\n            <div className=\"__table\">\n                <table>\n                    <tr className=\"host\">\n                        <td>Ý định</td>\n                        <td>Nội dung</td>\n                        <td></td>\n                    </tr>\n                    {intents.map(i => (\n                        <tr className=\"tr_hover\" key={i.text + i.intent}>\n                            <td className=\"col_name\">{i.intent}</td>\n                            <td className=\"clo_entitis\">{i.text}</td>\n                            <td className=\"select_dot\" onClick={() => deleteIntent(i.parent, i.child)}>Xoá</td>\n                        </tr>\n                    ))}\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default Intents\n"]},"metadata":{},"sourceType":"module"}