[{"/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/index.js":"1","/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/reportWebVitals.js":"2","/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/App.js":"3","/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/container/Intents.jsx":"4","/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/container/Entities.jsx":"5","/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/container/Home.jsx":"6","/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/container/Utterances.jsx":"7","/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/container/ChatView.jsx":"8","/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/base/PopUpCreateEntity.js":"9","/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/base/PopUpCreateIntent.js":"10","/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/component/ListEntity.js":"11","/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/component/EntityItem.js":"12","/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/hook/useOutsideAlerter.js":"13"},{"size":589,"mtime":1620189011937,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1620142908000,"results":"16","hashOfConfig":"15"},{"size":4932,"mtime":1620188783193,"results":"17","hashOfConfig":"15"},{"size":3808,"mtime":1620179152683,"results":"18","hashOfConfig":"15"},{"size":2029,"mtime":1620179138364,"results":"19","hashOfConfig":"15"},{"size":15792,"mtime":1620210306354,"results":"20","hashOfConfig":"15"},{"size":2288,"mtime":1620179144649,"results":"21","hashOfConfig":"15"},{"size":1789,"mtime":1620179338780,"results":"22","hashOfConfig":"15"},{"size":3247,"mtime":1620142908000,"results":"23","hashOfConfig":"15"},{"size":3594,"mtime":1620142908000,"results":"24","hashOfConfig":"15"},{"size":611,"mtime":1620142908000,"results":"25","hashOfConfig":"15"},{"size":1247,"mtime":1620142908000,"results":"26","hashOfConfig":"15"},{"size":466,"mtime":1620142908000,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1hg9s59",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/index.js",[],["62","63"],"/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/reportWebVitals.js",[],"/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/App.js",["64","65"],"import React, { useState } from \"react\";\nimport \"./App.css\";\nimport \"./access/css/style.css\";\nimport { Route, NavLink } from \"react-router-dom\";\nimport Home from \"./container/Home\";\nimport Intents from \"./container/Intents\";\nimport Entities from \"./container/Entities\";\nimport Utterances from \"./container/Utterances\";\nimport ChatView from \"./container/ChatView\";\nimport barChart from \"./access/img/icon_bar_chart.png\";\nimport robot from \"./access/img/icon_robot.png\";\nimport chat from \"./access/img/icon_chat.png\";\n\nfunction App() {\n  const [activePage, setActivePage] = useState(\"/\");\n\n  const renderSwith = (key) => {\n    switch (key) {\n      case \"/\":\n        return <Home />;\n      case \"/Chatview\":\n        return <ChatView />;\n      case \"/intents\":\n        return <Intents />;\n      case \"/entities\":\n        return <Entities />;\n      case \"/stories\":\n        return <Utterances />;\n      default:\n        return <Home />;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {/* header */}\n      <div className=\"body\">\n        <div className=\"tabbar\">\n          <div\n            style={\n              activePage === \"/\"\n                ? {\n                    borderLeftWidth: 4,\n                    borderLeftStyle: \"solid\",\n                    borderLeftColor: \"cornflowerblue\",\n                  }\n                : {}\n            }\n            onClick={() => setActivePage(\"/\")}\n            to=\"/\"\n            className=\"understanding\"\n          >\n            <div>\n              <img\n                src={robot}\n                alt={\"training\"}\n                style={{\n                  width: 15,\n                  height: 15,\n                  marginLeft: 10,\n                }}\n              />\n            </div>\n            <div\n              style={{\n                paddingLeft: 10,\n                fontWeight: \"bold\",\n                cursor: \"pointer\",\n              }}\n            >\n              Huấn luyện\n            </div>\n          </div>\n          <div\n            style={\n              activePage === \"/Chatview\"\n                ? {\n                    borderLeftWidth: 4,\n                    borderLeftStyle: \"solid\",\n                    borderLeftColor: \"cornflowerblue\",\n                  }\n                : {}\n            }\n            onClick={() => setActivePage(\"/Chatview\")}\n            to=\"/Chatview\"\n            // to=\"/\"\n            className=\"understanding\"\n          >\n            <div>\n              <img\n                src={chat}\n                alt={\"test chat\"}\n                style={{\n                  width: 15,\n                  height: 15,\n                  marginLeft: 10,\n                }}\n              />\n            </div>\n            <div\n              style={{\n                paddingLeft: 10,\n                fontWeight: \"bold\",\n                cursor: \"pointer\",\n              }}\n            >\n              Thử chat\n            </div>\n          </div>\n          <div\n            style={\n              activePage !== \"/\" && activePage !== \"/Chatview\"\n                ? {\n                    borderLeftWidth: 4,\n                    borderLeftStyle: \"solid\",\n                    borderLeftColor: \"cornflowerblue\",\n                  }\n                : {}\n            }\n            className=\"managerment\"\n          >\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n              <img\n                src={barChart}\n                alt={\"management\"}\n                style={{\n                  width: 15,\n                  height: 15,\n                  marginRight: 11,\n                }}\n              />\n              <h4>Quản lý</h4>\n            </div>\n            <ul className=\"navMenu\">\n              <li className=\"navItem\">\n                <div\n                  style={activePage === \"/intents\" ? { color: \"blue\" } : {}}\n                  onClick={() => setActivePage(\"/intents\")}\n                  className=\"linkNav\"\n                  to=\"/intents\"\n                >\n                  Ý định\n                </div>\n              </li>\n              <li className=\"navItem\">\n                <div\n                  style={activePage === \"/entities\" ? { color: \"blue\" } : {}}\n                  onClick={() => setActivePage(\"/entities\")}\n                  className=\"linkNav\"\n                  to=\"/entities\"\n                >\n                  Thực thể\n                </div>\n              </li>\n              <li className=\"navItem\">\n                <div\n                  style={activePage === \"/stories\" ? { color: \"blue\" } : {}}\n                  onClick={() => setActivePage(\"/stories\")}\n                  className=\"linkNav\"\n                  to=\"/stories\"\n                >\n                  Kịch bản\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div className=\"conten\">{renderSwith(activePage)}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/container/Intents.jsx",["66","67","68"],"import React from 'react'\nimport '../App.css';\nimport '../access/css/style.css'\nimport { useCallback, useEffect, useState } from 'react/cjs/react.development';\nimport axios from 'axios';\nimport search from '../access/img/icon_search.png';\n\nfunction Intents({location, history}) {\n    useEffect(() => {\n            console.log('load data', location)\n            axios.get(window.location.hostname + ':5000' + '/intent')\n                .then(({\n                    data\n                }) => {\n                    setIntents(prev => {\n                        return data.map((item, parentIdx) => {\n                            return item.examples.split('\\n').filter(i => i).map((text, childIdx) => ({\n                                text: text.substr(2),\n                                intent: item.intent,\n                                parent: parentIdx,\n                                child: childIdx\n                            }))\n                        }).flat()\n                    })\n                })\n                .catch(console.log)\n    }, [location])\n    const [intents, setIntents] = useState([])\n\n    const deleteIntent = useCallback((parent, child) => {\n        const examples = intents.filter(i => i.parent === parent && i.child !== child).reduce((ex, i) => ex + `- ${i.text}\\n`, '')\n        if (examples) {\n            axios.put(window.location.hostname + ':5000' + '/intent/' + parent, {examples}).then(({data}) => setIntents(data.map((item, parentIdx) => {\n                                return item.examples.split('\\n').filter(t => t).map((text, childIdx) => ({\n                                    text: text.substr(2),\n                                    intent: item.intent,\n                                    path: `${parentIdx}.${childIdx}`\n                                }))\n                            }).flat()))\n        } else {\n            axios.delete(window.location.hostname + ':5000' + '/intent/' + parent).then(({data}) => setIntents(data.map((item, parentIdx) => {\n                                return item.examples.split('\\n').filter(t => t).map((text, childIdx) => ({\n                                    text: text.substr(2),\n                                    intent: item.intent,\n                                    path: `${parentIdx}.${childIdx}`\n                                }))\n                            }).flat()))\n        }\n    }, [intents])\n    return (\n         <div className=\"table_conten\">\n            <div className=\"header_tab\">\n                <div className=\"text_01\">Ý định</div>\n                {/* <div className=\"btn\">\n                    <div style={{ color: \"#fff\", fontWeight:\"bold\" }}>Train</div>\n                </div> */}\n            </div>\n            <div className=\"__search_input\">\n                <img alt={\"search\"} style={{ width: 15, height: 15, marginLeft:10, marginRight:10}} src={search}/>\n                <input\n                    style={{outlineWidth: 0,width:\"100%\", border:0, height:\"100%\", fontSize: 16}}\n                />\n            </div>\n            <div className=\"__table\">\n                <table>\n                    <tr className=\"host\">\n                        <td>Ý định</td>\n                        <td>Nội dung</td>\n                        <td></td>\n                    </tr>\n                    {intents.map(i => (\n                        <tr className=\"tr_hover\" key={i.text + i.intent}>\n                            <td className=\"col_name\">{i.intent}</td>\n                            <td className=\"clo_entitis\">{i.text}</td>\n                            <td className=\"select_dot\" onClick={() => deleteIntent(i.parent, i.child)}>Xoá</td>\n                        </tr>\n                    ))}\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default Intents\n","/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/container/Entities.jsx",["69","70"],"import React from 'react'\nimport '../App.css';\nimport '../access/css/style.css'\nimport { useCallback, useEffect, useState } from 'react/cjs/react.development';\nimport axios from 'axios';\nimport search from '../access/img/icon_search.png';\n\nfunction Entities({location}) {\n    useEffect(() => {\n            axios.get(window.location.hostname + ':5000' + '/entity')\n                .then(({\n                    data\n                }) => {\n                    setEntities(data)\n                })\n                .catch(console.log)\n    }, [location])\n    const [entities, setEntities] = useState([])\n    const deleteEntity = useCallback((idx) => {\n        axios.delete(window.location.hostname + ':5000' + '/entity/' + idx).then(({data}) => setEntities(data))\n    }, [])\n    return (\n         <div className=\"table_conten\">\n            <div className=\"header_tab\">\n                <div className=\"text_01\">Thực thể</div>\n\n                {/* <div className=\"btn\">\n                    <div style={{ color: \"#fff\", fontWeight:\"bold\" }}>Train</div>\n                </div> */}\n            </div>\n            <div className=\"__search_input\">\n                <img alt={\"search\"} style={{ width: 15, height: 15, marginLeft:10, marginRight:10}} src={search}/>\n                <input\n                    style={{outlineWidth: 0,width:\"100%\", border:0, height:\"100%\", fontSize: 16}}\n                />\n            </div>\n            <div className=\"__table\">\n                <table>\n                    <tr className=\"host\">\n                        <td>Tên</td>\n                        <td></td>\n                    </tr>\n                    {entities.map((e, idx) => (\n                        <tr className=\"tr_hover\" key={e}>\n                            <td className=\"col_name\">{e}</td>\n                            <td className=\"select_dot\" onClick={() => deleteEntity(idx)}>Xoá</td>\n                        </tr>\n                    ))}\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default Entities\n","/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/container/Home.jsx",["71","72","73","74","75","76","77","78"],"/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/container/Utterances.jsx",["79","80"],"import React from 'react'\nimport '../App.css';\nimport '../access/css/style.css'\nimport { useCallback, useEffect, useState } from 'react/cjs/react.development';\nimport axios from 'axios';\nimport search from '../access/img/icon_search.png';\n\nfunction Utterances({location}) {\n    useEffect(() => {\n            axios.get(window.location.hostname + ':5000' + '/story')\n                .then(({\n                    data\n                }) => {\n                    setStories(data)\n                })\n                .catch(console.log)\n    }, [location])\n    const [stories, setStories] = useState([])\n    const deleteStory = useCallback((idx) => {\n        axios.delete(window.location.hostname + ':5000' + '/story/' + idx).then(({data}) => setStories(data))\n    }, [])\n    return (\n         <div className=\"table_conten\">\n            <div className=\"header_tab\">\n                <div className=\"text_01\">Kịch bản</div>\n\n                {/* <div className=\"btn\">\n                    <div style={{ color: \"#fff\", fontWeight:\"bold\" }}>Train</div>\n                </div> */}\n            </div>\n            <div className=\"__search_input\">\n                <img alt={\"search\"} style={{ width: 15, height: 15, marginLeft:10, marginRight:10}} src={search}/>\n                <input\n                    style={{outlineWidth: 0,width:\"100%\", border:0, height:\"100%\", fontSize: 16}}\n                />\n            </div>\n            <div className=\"__table\">\n                <table>\n                    <tr className=\"host\">\n                        <td>Tên</td>\n                        <td>Ý định</td>\n                        <td>Phản hồi</td>\n                        <td></td>\n                    </tr>\n                    {stories.map((s, idx) => (\n                        <tr className=\"tr_hover\" key={s.story}>\n                            <td className=\"col_name\">{s.story}</td>\n                            <td className=\"clo_entitis\">{s.steps[0].intent}</td>\n                            <td className=\"clo_entitis\">{s.steps[1].action}</td>\n                            <td className=\"select_dot\" onClick={() => deleteStory(idx)}>Xoá</td>\n                        </tr>\n                    ))}\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default Utterances\n","/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/container/ChatView.jsx",["81"],"import axios from \"axios\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react/cjs/react.development\";\nimport \"../base/chatview.css\";\n\nfunction ChatView() {\n  const [user, setUser] = useState('')\n  useEffect(() => {\n        setUser('user_' + new Date().getTime())\n  }, [])\n  const [messages, setMessages] = useState([])\n  const [messageInput, setMessageInput] = useState('')\n\n  const reset = () => {\n    setMessages([])\n    setUser('user_' + new Date().getTime())\n    setMessageInput('')\n  }\n\n  const sendMessage = async () => {\n    try {\n      setMessageInput('')\n      setMessages(prev => prev.concat({type: 'user', message: messageInput}))\n      const {data} = await axios.post(window.location.hostname + ':5000' + '/chat', {sender: user, message: messageInput}) \n      if (data.length > 0) {\n        setMessages(prev => prev.concat({type: 'bot', message: data[0].text}))\n      }\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  return (\n    <div className=\"chat-tab\">\n      <div className=\"box-chat\">\n        {messages.map(m => (\n          m.type === 'bot'\n          ? <div className=\"boss-chat\">\n              <h5>{m.message}</h5>\n            </div>\n          : <div className=\"user-chat\">\n              <h5>{m.message}</h5>\n            </div>\n        ))}\n        <div className=\"chat-send\">\n          <input placeholder=\"Input your message\"\n            onKeyDown={e => (e.keyCode ? e.keyCode : e.which) === 13 && sendMessage()}\n            value={messageInput}\n            onChange={e => setMessageInput(e.target.value)} />\n          <h3 className=\"resetbtn\" onClick={reset}>\n            Xoá hội thoại\n          </h3>\n          <h3 className=\"sendbtn\" onClick={sendMessage}>Gửi</h3>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatView;\n","/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/base/PopUpCreateEntity.js",["82","83"],"import React from \"react\";\nimport \"./popUp.css\";\nimport useOutsideAlerter from \"../hook/useOutsideAlerter\";\nimport { useCallback, useEffect, useMemo, useState } from \"react/cjs/react.development\";\nimport axios from \"axios\";\n\nfunction PopUpCreateEntity(props) {\n  const {textInputEntity} = props;\n  const popupRef = React.useRef(null);\n  useOutsideAlerter(popupRef, props.onClickOutside);\n  const [dataInput, setDataInput] = useState(textInputEntity || \"\");\n\n  useEffect(() => {\n    if (props.show) {\n      axios.get(window.location.hostname + ':5000' + '/entity')\n          .then(({\n              data\n          }) => {\n              setEntities(data)\n          })\n          .catch(console.log)\n    } else {\n      setDataInput('')\n    }\n  }, [props.show])\n  const [entities, setEntities] = useState([]);\n  const displayEntities = useMemo(() => {\n    return entities.filter(e => e.trim().toLowerCase().includes(dataInput.trim().toLowerCase()))\n  }, [dataInput, entities])\n\n  const createNewEntity = useCallback(() => {\n    if (dataInput) {\n      axios.post(window.location.hostname + ':5000' + '/entity', {name: dataInput})\n            .then(({\n                data\n            }) => {\n                setEntities(data)\n                props.onSelect(dataInput)\n                props.onClickOutside()\n            })\n            .catch(console.log)\n            .finally(() => setDataInput(''))\n    } else {\n      alert('Thực thể không được rỗng')\n    }\n  }, [dataInput, props])\n\n  return (\n    <div\n      style={{\n        width: props.width,\n        minHeight: props.height ? props.height : \"250px\",\n        top: props.top ? props.top : \"\",\n        left: props.left ? props.left : \"\",\n        right: props.right ? props.right : \"\",\n        bottom: props.bottom ? props.bottom : \"\",\n      }}\n      className=\"pop_up_input\"\n      ref={popupRef}\n    >\n      <div className=\"create_entity\">\n        <div className=\"input_create\">\n          <input\n            style={{\n              width: \"100%\",\n              fontSize: 15,\n              paddingLeft: 10,\n              border: \"none\",\n              boxShadow: \"none\",\n              borderWidth: 0,\n              outlineWidth: 0,\n            }}\n            placeholder={`Thực thể cho \"${props.placeholderInput}\"`}\n            value={dataInput}\n            onChange={(e) => {\n              setDataInput(e.target.value)\n            }}\n          />\n        </div>\n        <div\n          style={{ cursor: \"pointer\" }}\n          className=\"btn_create\"\n          onClick={createNewEntity}\n        >\n          <div style={{ color: \"#fff\" }}>{props.btnText}</div>\n        </div>\n      </div>\n      <div\n        style={{\n          height: props.heightSuggestions ? props.heightSuggestions : \"250px\",\n        }}\n        className=\"suggestions\"\n      >\n        {displayEntities &&\n          displayEntities.map((item) => {\n            return (\n              <div key={item} className=\"suggestions_item\" onClick={() => {\n                props.onSelect(item)\n                props.onClickOutside()\n              }}>\n                <div className=\"text1_suggestions_item\">{item}</div>\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n}\n\nexport default PopUpCreateEntity;\n","/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/base/PopUpCreateIntent.js",["84","85"],"import React from \"react\";\nimport \"./popUp.css\";\nimport useOutsideAlerter from \"../hook/useOutsideAlerter\";\nimport { useCallback, useEffect, useMemo, useState } from \"react/cjs/react.development\";\nimport axios from \"axios\";\n\nfunction PopUpCreateIntent(props) {\n  const popupRef = React.useRef(null);\n  useOutsideAlerter(popupRef, props.onClickOutside);\n  const [dataInput, setDataInput] = useState(\"\");\n\n  useEffect(() => {\n    if (props.show) {\n      console.log('load intent')\n      axios.get(window.location.hostname + ':5000' + '/intent')\n          .then(({\n              data\n          }) => {\n              const i = data.map((item) => ({name: item.intent})).flat()\n              setIntents(i)\n          })\n          .catch(console.log)\n    } else {\n      setDataInput('')\n    }\n  }, [props.show])\n  const [intents, setIntents] = useState([]);\n  const displayIntents = useMemo(() => {\n    return intents.filter(i => i.name.trim().toLowerCase().includes(dataInput.trim().toLowerCase()))\n  }, [dataInput, intents])\n\n  const createNewIntent = useCallback(() => {\n    if (dataInput) {\n      axios.post(window.location.hostname + ':5000' + '/intent', {name: dataInput, example: ''})\n            .then(({\n                data\n            }) => {\n                const i = data.map((item) => ({name: item.intent})).flat()\n                setIntents(i)\n                props.onSelect(dataInput)\n                props.onClickOutside()\n            })\n            .catch(console.log)\n            .finally(() => setDataInput(''))\n    } else {\n      alert('Ý định không được rỗng')\n    }\n  }, [dataInput, props])\n\n  return (\n    <div\n      style={{\n        width: props.width,\n        minHeight: props.height ? props.height : \"250px\",\n        top: props.top ? props.top : \"\",\n        left: props.left ? props.left : \"\",\n        right: props.right ? props.right : \"\",\n        bottom: props.bottom ? props.bottom : \"\",\n      }}\n      className=\"pop_up_input\"\n      ref={popupRef}\n    >\n      <div className=\"create_entity\">\n        <div className=\"input_create\">\n          <input\n            style={{\n              width: \"100%\",\n              fontSize: 15,\n              paddingLeft: 10,\n              border: \"none\",\n              boxShadow: \"none\",\n              borderWidth: 0,\n              outlineWidth: 0,\n            }}\n            value={dataInput}\n            onChange={e => {\n              setDataInput(e.target.value)\n            }}\n          />\n        </div>\n        <div\n          style={{ cursor: \"pointer\" }}\n          onClick={createNewIntent}\n          className=\"btn_create\"\n        >\n          <div style={{ color: \"#fff\" }}>{props.btnText}</div>\n        </div>\n      </div>\n      <div\n        style={{\n          height: props.heightSuggestions ? props.heightSuggestions : \"250px\",\n        }}\n        className=\"suggestions\"\n      >\n        {displayIntents &&\n          displayIntents.map((item) => {\n            return (\n              <div key={item.name} className=\"suggestions_item\" onClick={() => {\n                  props.onSelect(item.name)\n                  props.onClickOutside()\n                }}>\n                <div className=\"text1_suggestions_item\">{item.name}</div>\n              </div>\n            );\n          })}\n        {/* item\n        <div className=\"suggestions_item\">\n          <div className=\"text1_suggestions_item\">sdafasdfasd</div>\n          <div className=\"text2_suggestions_item\">\n            dfsadfsdakfjsadkfjsdakjjaksd\n          </div>\n        </div>\n        {/* item */}\n      </div>\n    </div>\n  );\n}\n\nexport default PopUpCreateIntent;\n","/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/component/ListEntity.js",[],"/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/component/EntityItem.js",[],"/Users/nhatngo/Downloads/demo-chatbot-master/frontend/src/hook/useOutsideAlerter.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":4,"column":10,"nodeType":"92","messageId":"93","endLine":4,"endColumn":15},{"ruleId":"90","severity":1,"message":"94","line":4,"column":17,"nodeType":"92","messageId":"93","endLine":4,"endColumn":24},{"ruleId":"95","severity":1,"message":"96","line":11,"column":58,"nodeType":"97","messageId":"98","endLine":11,"endColumn":59},{"ruleId":"95","severity":1,"message":"96","line":33,"column":58,"nodeType":"97","messageId":"98","endLine":33,"endColumn":59},{"ruleId":"95","severity":1,"message":"96","line":41,"column":61,"nodeType":"97","messageId":"98","endLine":41,"endColumn":62},{"ruleId":"95","severity":1,"message":"96","line":10,"column":58,"nodeType":"97","messageId":"98","endLine":10,"endColumn":59},{"ruleId":"95","severity":1,"message":"96","line":20,"column":57,"nodeType":"97","messageId":"98","endLine":20,"endColumn":58},{"ruleId":"90","severity":1,"message":"99","line":9,"column":8,"nodeType":"92","messageId":"93","endLine":9,"endColumn":13},{"ruleId":"90","severity":1,"message":"100","line":13,"column":8,"nodeType":"92","messageId":"93","endLine":13,"endColumn":16},{"ruleId":"90","severity":1,"message":"101","line":23,"column":10,"nodeType":"92","messageId":"93","endLine":23,"endColumn":14},{"ruleId":"90","severity":1,"message":"102","line":23,"column":15,"nodeType":"92","messageId":"93","endLine":23,"endColumn":22},{"ruleId":"90","severity":1,"message":"103","line":33,"column":9,"nodeType":"92","messageId":"93","endLine":33,"endColumn":19},{"ruleId":"95","severity":1,"message":"96","line":178,"column":58,"nodeType":"97","messageId":"98","endLine":178,"endColumn":59},{"ruleId":"95","severity":1,"message":"96","line":251,"column":59,"nodeType":"97","messageId":"98","endLine":251,"endColumn":60},{"ruleId":"95","severity":1,"message":"96","line":269,"column":59,"nodeType":"97","messageId":"98","endLine":269,"endColumn":60},{"ruleId":"95","severity":1,"message":"96","line":10,"column":58,"nodeType":"97","messageId":"98","endLine":10,"endColumn":59},{"ruleId":"95","severity":1,"message":"96","line":20,"column":57,"nodeType":"97","messageId":"98","endLine":20,"endColumn":58},{"ruleId":"95","severity":1,"message":"96","line":24,"column":74,"nodeType":"97","messageId":"98","endLine":24,"endColumn":75},{"ruleId":"95","severity":1,"message":"96","line":15,"column":52,"nodeType":"97","messageId":"98","endLine":15,"endColumn":53},{"ruleId":"95","severity":1,"message":"96","line":33,"column":53,"nodeType":"97","messageId":"98","endLine":33,"endColumn":54},{"ruleId":"95","severity":1,"message":"96","line":15,"column":52,"nodeType":"97","messageId":"98","endLine":15,"endColumn":53},{"ruleId":"95","severity":1,"message":"96","line":34,"column":53,"nodeType":"97","messageId":"98","endLine":34,"endColumn":54},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'robot' is defined but never used.","'ReactDOM' is defined but never used.","'text' is assigned a value but never used.","'setText' is assigned a value but never used.","'openModal2' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]